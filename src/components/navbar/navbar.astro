---
import MenuIcon from "@mui/icons-material/Menu";
import type { NavLink } from "./types";

const links: NavLink[] = [
    { name: "Home", target: "/" },
    { name: "Projects", target: "/projects" },
    { name: "Blog", target: "/blog" },
    { name: "Contact", target: "/#contact"},
    { name: "Resume", target: "https://drive.google.com/file/d/1y_VlkkFUaFXCCYF-WO-EDnCOfMHy_F90/view?usp=sharing"},
];

const linkCount: number = links.length;
const path: string = '/' + Astro.url.pathname.split("/")[1];
let open: boolean = false;
---

<nav class={`justify-between items-center transition-all duration-10 ${open ? "bg-grey-normal" : "bg-opacity-0 " }  flex flex-row`}>  
  <a href="/" class={`text-2xl md:self-center md:pl-3 p-4 no-underline font-bold opacity-0 animate-fade-down`} 
    style={{animationDelay: "300ms"}}
  >John Ling</a>

  {/* mobile hamburger menu */}
  <button class="md:hidden p-2 animate-fade-down opacity-0" 
          style={{animationDelay: "300ms"}} 
          onClick={() => setOpen(!open)}
  >
    <MenuIcon className="active:text-muted-white"/>
  </button>

  {/* desktop menu */} 
  <div class={`hidden invisible md:flex md:visible p-4 opacity-0 animate-fade-down`} 
        style={{animationDelay: "500ms"}}
  > 
    <ul class="flex flex-col md:flex-row gap-x-2 gap-y-2 md:gap-x-6 align-middle">
      {links.map((link: NavLink, i: number) => {
        return <li class="p-2 opacity-0 animate-fade-down" style={{animationDelay: `${(linkCount - i) * 150}ms`}}>
          <a  class={`no-underline w-screen md:w-auto ${link.target === path ? "font-bold text-orange" : ""}`} 
            aria-current={link.target === path ? "page" : undefined} href={link.target}
          >
            {link.name}
          </a>
        </li>
      })}
    </ul>
  </div>

  {/* mobile menu */}
  <div 
    class={
      `absolute visible block md:invisible md:hidden top-12 w-full bg-grey-normal transition-all z-10 
      ease-in-out duration-300`}
  >
    <div class={`transition-all ease-in-out  ${open ? 'duration-300 opacity-100' : " duration-300 opacity-0 invisible"}`}>
      {open ? <MobileMenu links={links} activeLink={path} handle_click={() => setOpen(false)} /> : null} 
    </div>
  </div>
</nav>

<script>
  // const buttons = 

</script>



<!-- 'use client';
import { useState } from "react";
// import { usePathname } from "next/navigation";
// import { meslo } from "@/lib/font";

import MenuIcon from '@mui/icons-material/Menu';


interface NavLink {
  name: string;
  target: string;
}

const Navbar = () => {
  const links: NavLink[] = [
    { name: "Home", target: "/" },
    { name: "Projects", target: "/projects" },
    { name: "Blog", target: "/blog" },
    { name: "Contact", target: "/#contact"},
    { name: "Resume", target: "https://drive.google.com/file/d/1y_VlkkFUaFXCCYF-WO-EDnCOfMHy_F90/view?usp=sharing"},
  ];
 
  // status of mobile menu
  const [open, setOpen] = useState<boolean>(false);
  
  const path: string = '/' + usePathname().split("/")[1];
  return (
    
  )
}

interface NavMenuProps {
  links: NavLink[]
  activeLink: string
  handle_click: () => void
}

const NavbarMenu: React.FC<NavMenuProps> = ({links, activeLink, handle_click}) => {
  return (
    
  )
}

const MobileMenu: React.FC<NavMenuProps> = ({links, activeLink, handle_click}) => {
  return (
    <>
      <div class="fixed top-0 w-full min-h-screen z-20">
        <div class="flex pt-2">
          <div class="z-40 w-full">
            <div class="flex w-full justify-end">
              <button onClick={handle_click} class="p-2">
                <CloseIcon class="active:text-muted-white" />
              </button>
            </div>
            <ul>
              {links.map((link: NavLink, i: number) => {
                return <li key={link.name} class="mb-3 mt-3 opacity-0 animate-fade-up" style={{animationDelay: `${(i + 1) * 150}ms`}}>
                  <Link href={link.target} onClick={handle_click} 
                    class={`text-7xl no-underline ${meslo.variable} font-meslo font-bold ${link.target === activeLink ? " text-orange" : ""}`}
                    aria-current={link.target === activeLink ? "page" : undefined}
                  >
                    {link.name.toUpperCase()}
                  </Link>
                </li>
              })}
            </ul>
          </div>
          <div class="absolute w-full h-full bg-grey-normal z-30"></div>  
        </div>
      </div>
    </>
  )
}

export default Navbar; -->